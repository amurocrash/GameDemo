apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile project(':gamesdklib')
}





//def sdk_classes = file(buildDir).absolutePath + "/intermediates/classes/debug"
//def sdk_libs = file(buildDir).absolutePath + "/intermediates/bundles/debug/libs"
//
//def jarToDexs = { String pathJar, String pathDex ->
//    println("jarToDexs:" + pathJar + ";" + pathDex)
//    project.exec {
//        commandLine(project.dx, '--dex', '--output', pathDex, pathJar)
//    }
//
//}
//
//def archiveJarName = 'result.jar'
//def archiveDexName = 'classes.jar'
//def sdk_target = file(buildDir).absolutePath + "/target"
//def sdk_target_core = sdk_target + '/core'
//
//task jarSDK(type: Jar) {
//    from(sdk_classes) {
//        include('**/*')
//    }
//    archiveName = archiveJarName
//    destinationDir = file(sdk_target_core)
//    doLast {
//        project.delete(sdk_libs+ "/" + 'android-support-v4.jar');
//        jarToDexs(destinationDir.absolutePath + "/" + archiveJarName + "," + sdk_libs, destinationDir.absolutePath + "/" + archiveDexName)
//        project.delete(destinationDir.absolutePath + "/" + archiveJarName);
//    }
//}
//task createSDK(dependsOn: ['jarSDK']) {
//}

task clearJar(type: Delete) {
    delete 'build/outputs/sdk_marketing_base.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/debug/')
    into('build/outputs/')
    include('classes.jar')
    rename ('classes.jar', 'sdk_marketing_base.jar')
}

makeJar.dependsOn(clearJar, build)
